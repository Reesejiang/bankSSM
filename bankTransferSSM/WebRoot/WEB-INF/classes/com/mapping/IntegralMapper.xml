<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.IntegralMapper">
  <resultMap id="BaseResultMap" type="com.model.Integral">
    <id column="integral_id" jdbcType="INTEGER" property="integralId" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="integral_num" jdbcType="INTEGER" property="integralNum" />
    <result column="integral_date" jdbcType="TIMESTAMP" property="integralDate" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
  </resultMap>
  <sql id="Base_Column_List">
    integral_id, account_id, integral_num, integral_date, product_id
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from integral
    where integral_id = #{integralId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from integral
    where integral_id = #{integralId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insertSelective" parameterType="com.model.Integral">
    insert into integral
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="integralId != null">
        integral_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="integralNum != null">
        integral_num,
      </if>
      <if test="productId != null">
      	product_id,
      </if>
      integral_date
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="integralId != null">
        #{integralId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="integralNum != null">
        #{integralNum,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Integral">
    update integral
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="integralNum != null">
        integral_num = #{integralNum,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
    </set>
    where integral_id = #{integralId,jdbcType=INTEGER}
  </update>

<select id="findIntegralAll" resultMap="BaseResultMap">
    select i.*,aa.account_name,pp.product_name from integral i
    left join account aa on i.account_id=aa.account_id
    left join product pp on i.product_id=pp.product_id
  </select>
  
  <select id="findIntegralAllByUid" resultMap="BaseResultMap">
    select i.*,aa.account_name,pp.product_name from integral i
    left join account aa on i.account_id=aa.account_id
    left join product pp on i.product_id=pp.product_id
    where i.account_id = #{uid,jdbcType=INTEGER}
  </select>
</mapper>